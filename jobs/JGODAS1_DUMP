#!/bin/sh
set -xa

export RUN_ENVIR=${RUN_ENVIR:-prod}

###############################################################
# This block can be modified for different test environment
###############################################################
if [ $RUN_ENVIR = prod -a $envir != prod ]; then
  export SENDDBN=${SENDDBN:-NO}
# export jlogfile=${jlogfile:-${DATA}/jlogfile.`date +%Y%m%d`}
fi

#####################################
# SET SHELL PROCESSING VARIABLES
# ###################################
export PS4='$SECONDS + '
date
################################################
# SETUP GODAS DUMP PROCESSING VARIABLES
# ##############################################

##########################################################
# obtain unique process id (pid) and make temp directory
##########################################################
export pid=$$
export DATA=${DATA:-${DATAROOT}/$job.$pid}
mkdir -p $DATA
cd $DATA

export cycle=t${cyc}z

####################################
# Specify NET Name and RUN
####################################
export NET=${NET:-godas}
export RUN=${RUN:-godas}

####################################
# Determine Job Output Name on System
####################################
export outid="LL$job"
export jobid="${outid}.o${pid}"
export pgmout="OUTPUT.${pid}"

####################################
# File To Log Msgs
####################################
#export jlogfile=${jlogfile:-${DATA}/jlogfile.${job}.$$}

####################################
# SENDECF  - Flag Events on ecFlow
# SENDDBN  - Issue DBNet Client Calls
# SENDCOM  - Copy files to /com directory
# GET_IOPROFILE - turn on I/O statistics
####################################
export SENDECF=${SENDECF:-YES}
export SENDDBN=${SENDDBN:-YES}
export SENDCOM=${SENDCOM:-YES}

####################################
# Specify Execution Areas
####################################
export HOMEgodas=${HOMEgodas:-${PACKAGEROOT:?}/godas.${godas_ver:?}}
export EXECgodas=${EXECgodas:-$HOMEgodas/exec}
export FIXgodas=${FIXgodas:-$HOMEgodas/fix}
export PARMgodas=${PARMgodas:-$HOMEgodas/parm}
export USHgodas=${USHgodas:-$HOMEgodas/ush}

#############################
# Set up the UTILITIES
##############################
export EXECwgrib=${EXECwgrib:-$WGRIB}
export EXECcopygb=${EXECcopygb:-$COPYGB}

# USHbufr is used to define dumpjb and dumpmb locations.
# EXECbufr is used to find bufr_combfr called in ex-script.
#   (See dumpjb and dumpmb scripts for configurable variables 
#    available to point to executables called by those scripts).
export HOMEbufr=${HOMEbufr:-${HOMEobsproc_dump}}
export USHbufr=${USHbufr:-$HOMEbufr/ush}
export EXECbufr=${EXECbufr:-$HOMEbufr/exec}
export LIST=${LIST:-${HOMEobsproc_shared_bufr_dumplist}/fix/bufr_dumplist}
export BTAB=${BTAB:-${HOMEobsproc_mods}/fix/bufrtab.mods}

export DUMPMB=$DUMPMB
export DUMPJB=$DUMPJB
export DUMPOPS=$DUMPJB

export ARGODUMP=${HOMEgodas}/exec/bufr_argodump
export DUMP=${HOMEgodas}/ush/bufr_dumparte
export TANK=${TANK:-$DCOMROOT/prod}
##############################
# Run setup to initialize working directory and utility scripts
##############################

##############################
# Run setpdy and initialize PDY variables
##############################

setpdy.sh

. ./PDY

##############################################
# Define COM directories
##############################################
export COMDIR=${COMDIR:-$(compath.py -o $NET/${godas_ver})}
export COMIN=${COMIN:-$(compath.py -o $NET/${godas_ver})/${RUN}.${PDY}}
export COMOUT=${COMOUT:-$(compath.py -o $NET/${godas_ver})/${RUN}.${PDY}}
export COMINsst=${COMINsst:-`compath.py ${envir}/com/gfs/${gfs_ver}/sst`}
export COMINflux=${COMINflux:-`compath.py ${envir}/com/cdas2/${cdas2_ver}/cdas2`}

mkdir -m 775 -p $COMOUT

env

#############################################################
# execute the script

$HOMEgodas/scripts/exgodas1_dump.sh

echo "`hostname`  --  `date`" > $COMOUT/where_${cycle}_${RUN}_dump_ran

###################################################
# msg end of job and clean up temperary directory
###################################################
cat $pgmout
msg="ENDED NORMALLY."
postmsg "$msg"

date

cd ${DATA}/..
if [ ${KEEPDATA}:-YES} = NO ] ; then rm -rf $DATA ; fi

